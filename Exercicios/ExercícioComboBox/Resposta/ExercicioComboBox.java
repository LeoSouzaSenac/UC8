/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.interfacegrafica;

import javax.swing.JOptionPane;

/**
 *
 * @author Professor
 */
public class ExercicioComboBox extends javax.swing.JFrame {

    /**
     * Creates new form ComboBox
     */
    public ExercicioComboBox() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        comboBox = new javax.swing.JComboBox<>();
        taskLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        taskInput = new javax.swing.JTextField();
        removeTask = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboBox.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buy bread", "Go to the gym" }));
        comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxActionPerformed(evt);
            }
        });

        taskLabel.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        taskLabel.setText("Task");
        taskLabel.setMaximumSize(new java.awt.Dimension(200, 16));
        taskLabel.setMinimumSize(new java.awt.Dimension(200, 16));
        taskLabel.setPreferredSize(new java.awt.Dimension(200, 16));

        addButton.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        taskInput.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        taskInput.setText("Write a new task");

        removeTask.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        removeTask.setText("Remove");
        removeTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTaskActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(removeTask))
                        .addComponent(comboBox, 0, 0, Short.MAX_VALUE)
                        .addComponent(taskInput))
                    .addComponent(taskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(taskInput, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(removeTask))
                .addContainerGap(185, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    // Método para adicionar tarefa
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
        
        String task = taskInput.getText(); //Pega o texto que escrevemos no TextField
        
        // Se a variável task não estiver vazia
        if (!task.isEmpty() && !"Write a new task".equals(task)) { 
            comboBox.addItem(task);
        } else {
        // Se o input estiver vazio ou for igual à "Write a new task", mostra essa mensagem 
            JOptionPane.showMessageDialog(this, "Write a new task!");
        }
    }                                         

    // Método para remover a tarefa
    private void removeTaskActionPerformed(java.awt.event.ActionEvent evt) {                                           
        
        String selectedTask = (String) comboBox.getSelectedItem();
        
        if (selectedTask != null) {
            comboBox.removeItem(selectedTask);
        } else {
            JOptionPane.showMessageDialog(this, "Select a task to delete!");
        }
    }                                          

    // Método que troca o que está escrito no label de acordo com o que eu selecionar
    private void comboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        /*
        IMPORTANTE: 
        O que estamos fazendo abaixo se chama Cast (ou type casting).
        Cast é o processo de converter um valor de um tipo de dado para outro em Java.
        
        Mas e por que fazemos isso aqui?
        
        Porque o método getSelectedItem retorna um tipo Object, que é a classe base para
        todas as outras classes em Java. Ou seja, não retorna uma String, então precisamos
        converter ele, fazendo o cast.
        */    
        String selectedTask = (String) comboBox.getSelectedItem();
        
               
        taskLabel.setText("Selected task: " + selectedTask);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExercicioComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExercicioComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExercicioComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExercicioComboBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExercicioComboBox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JButton removeTask;
    private javax.swing.JTextField taskInput;
    private javax.swing.JLabel taskLabel;
    // End of variables declaration                   
}
